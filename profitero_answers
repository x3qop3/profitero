Q1
﻿1) Какие сторонние библиотеки Вы используете чаще всего для разработки? Какие плюсы в них Вы выделяете для себя? 
 (Ruby или тот язык на котором пишите)
Библиотеки для парсинга html\xml, например nokogiri.
choice
curb - библиотека для передачи URL-адресов
плюсы прежде всего удобность в использовании и скорость разработки
Ещё одной сторонней библиотекой я пользовался при написании курсовой работы на JS. Использовал фреймворк Phaser, 
чтобы не думать о физике полета своего объекта,
достаточно было задать некоторые параметры, а дальше всё сделал Рhaser.

2)C какими OС Вы работали? Работали ли с консолью? Какие консольные утилиты Linux Вы знаете и использовали?
На данный момент я использую Windows и дистртибутив Linux MINT на Debian.
Знаю утиллиты для работы с файлами, ls - вывести список файлов в текущей директории, cd - переход между директориями,
rm -удалить файл , rmdir - удалить папку, mv -переместить файл, touch -создать пустой файл.
clear - очистить окно терминала от всех сообщений, sudo - команда на права суперпользователя, требуется ввод пароля, 
например хотим установить gem curb, если напишем sudo gem install curb - команда выполнится от имени администратора.
top - перечень процесов которые выполняются, rename - переименовать файл, file - информация об указанном файле, 
uname - сведения о системе, выведет только название , например Linux,а если ввести "uname - a" выведет сведения об имени ПК 
и версии ядра. passwd - меняет пароль,
Знаю о таких утиллитах как : “W” - используется для того, чтобы посмотреть кто залогинен в системе 
и какие процессы запущены от этого пользователя.
 Знаком c утиллитой “NMON”, которая может показать информацию , связанную с сетью, ЦП, памятью. 
Большинство этих утиллит я использовал на лабораторных работах в университете.

3) Как Вы повышаете свою профессиональную квалификацию (названия книг, курсов,
сайтов, скринкастов и т.д.)? форумы, документация языка , книги: 
Книга: Язык программирования C# 5.0 и платформа .NET 4.5 6-е издание, автор Эндрю Троелсен,
Книга: Ruby Объектно-ориентированное программирование, автор Сэнди Метц.
Курсы английского языка уровня Intermediate.
Конечно же сайт https://stackoverflow.com/, https://ruby-doc.org.

Q2 

1)Какие инструменты для профайлинга и дебага Вы используете? Какие у них минусы?
puts
inspect
logger
минус у inspect можно отнести увеличение времени исполнения скрипта.

2. Объясните почему происходит следующее:
a. 1660 / 100 ≠ 16.6
т.к. результатом деления целых чисел в Ruby, является целое число. Поэтому 1660 / 100 = 16. 
Для того чтобы получить действительное число в качестве результата деления двух целых чисел,
необходимо привести хотябы одно из них к вещественному типу, например так: 
1660.0 / 100 или так 1660.to_f / 100 или 1660 / 100.to_f
b. 24.0 * 0.1 ≠ 2.4
Это происходит из-за неточности представления чисел с плавающей точкой в двоиной системе. 
Как правило, вычисления с плавающей точкой проводятся с большим числом разрядов, а конечный
резудьтат округляется до меньшего числа разрядов.
Так в этом примере нужно округлить до 1го разряда после точки: (24.0 * 0.1).round(1)
(24.0 * 0.1).round(1) = 2.4

3. С какими базами данных вы работали? Проектировали ли вы свою собственную БД?
Сколько было в ней таблиц? С какой самой большой таблицей по количеству записей
Вы работали?
Работал с MySQL, в ответвлении MariaDB , было 10 таблиц, предметная область у меня была "Книги",
выделял сущности и атрибуты, приводил к 3 НФ. по заданию добавлял 10 записей в таблицу и делал 4 выборки и 4 представления,
потом добавляли большое количество записей примерно 1000, и смотрел скорость выполнения запроса 
при помощи explain перед select .

4) Оптимизировали ли Вы запросы в SQL? Как Вы это делали? Как Вы понимаете что
запрос выполняется оптимально?

Например так можно оптимизировать запрос: не используйте выборку всех полей — "*". Следует перечислить 
только поля которые нам нужны, а если нужны все, то лучше их всё равно перечислить это сократит количество
выбираемых и пересылаемых данных.
Не надо выполнять запросы в цикле.
Запрос выполняется оптимально если на обработку запроса уходит меньше времени чем до оптимизации.

Q3
Вы работаете разработчиком в компании, которая является крупной сетью магазинов, а
также онлайн ритейлером, одним из крупнейших в своем регионе. В вашем онлайн
магазине имеется порядка 100 тыс различных продуктов.
На рынке кроме вас присутствуют несколько конкурирующих компаний, одна из которых
(“Брусничка”) растет достаточно быстрыми темпами и уже фактически дышит вам в
спину. Свою маркетинговую стратегию данная компания строит на демпинге цен, ее
лозунг - “Дешевле чем везде”. Также вы знаете, что эта компания использую различные
технические средства отслеживает цены своих конкурентов, чтобы предложить меньшую
цену и привлечь покупателей к себе.
Как разработчику Вам поставлена задача любой ценой блокировать доступ с целью
сбора данных по вашим продуктам, но при этом сайт должен функционировать и ни в
коем образе не отталкивать текущих и новых покупателей.
Ваши действия?

Как вариант можно установить капчу при постоянных запросах с ip адреса, но это не всегда эффективно, 
т.к. обычный пользователь тоже может быстро перемещаться по сайту, но и это может не дать желаемого результата,
а лишь чуть-чуть затормозит процесс сбора информации, т.к. уже есть нейронные сети, которые могут проходить капчу. 
Так что задача "любой ценой блокировать доступ с целью сбора данных по вашим продуктам, но при этом сайт должен
функционировать и ни вкоем образе не отталкивать текущих и новых покупателей" я считаю недостижимой.



